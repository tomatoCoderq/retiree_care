from aiogram import types, Dispatcher
import keyboards
from loguru import logger
import sqlite3
from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import Text

import keyboards


class CodeInput(StatesGroup):
    waitingForAnswer = State()

async def start(message:types.Message):
    await message.answer(f"""–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.full_name}!</b>–Ø - —Å–∏—Å—Ç–µ–º–∞ <b>Retiree-Care</b>ü§ñ 
–°–∏—Å—Ç–µ–º–∞ <b>Retiree-Care</b> –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª—é–¥—è–º <i>–≤—Å–µ–≥–¥–∞</i> –±—ã—Ç—å –Ω–∞ —Å–≤—è–∑–µ —Å–æ —Å–≤–æ–∏–º–∏ –ø–æ–∂–∏–ª—ã–º–∏ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞–º–∏.""", reply_markup=types.ReplyKeyboardRemove(True))
    logger.info("Greetings were sent")
    await message.answer(f"–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É, –≤–∞–º –Ω–∞–¥–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –∫–æ—Ä–æ–±–∫–µ!")
    await CodeInput.waitingForAnswer.set()

async def get_answer(message:types.Message, state:FSMContext):
    if message.text == "010122":
        await message.reply(f"–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!", reply_markup=keyboards.keyboard_main())
    elif message.is_command:
        await message.reply(f"–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –∫–æ–¥! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")
    else:
        await message.reply(f"–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –∫–æ–¥! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")
        return

def register_handlers_common(dp: Dispatcher):
    dp.register_message_handler(start, commands=["start", "hello", "welcome", "about", "–ø—Ä–æ–≤–µ–¥–∞—Ç—å"])
    dp.register_message_handler(get_answer, state=CodeInput.waitingForAnswer)